services:
  frontend:
    build: ./frontend
    container_name: vente-frontend
    ports:
      - '3000:3000'
    stdin_open: true
    tty: true
    networks:
      - mern-networks
    volumes:
      - ./uploads:/app/uploads
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://backend:5000
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=3000"
      - "prometheus.path=/metrics"
    depends_on:
      - backend

  backend:
    build: ./backend
    container_name: vente-backend
    ports:
      - '5000:5000'
    restart: always
    networks:
      - mern-networks
    volumes:
      - ./uploads:/app/uploads
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGO_URI=mongodb://mongo:27017/vente_db
      - JWT_SECRET=${JWT_SECRET:-default_dev_secret_change_in_production}
      - ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000
      - ENABLE_METRICS=true
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=5000"
      - "prometheus.path=/metrics"
    depends_on:
      - mongo

  mongo-exporter:
    image: percona/mongodb_exporter:0.44.0
    container_name: vente-mongo-exporter
    command:
      - '--mongodb.uri=mongodb://mongo:27017'
    ports:
      - "9216:9216"
    networks:
      - mern-networks
    depends_on:
      - mongo

  mongo:
    image: mongo:4.4
    container_name: vente-mongo-db
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
    networks:
      - mern-networks
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      - MONGO_INITDB_DATABASE=vente_db

  prometheus:
    image: prom/prometheus:latest
    container_name: vente-prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - mern-networks

  grafana:
    image: grafana/grafana:latest
    container_name: vente-grafana
    restart: always
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-changeme123}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - mern-networks

  node-exporter:
    image: prom/node-exporter:latest
    container_name: vente-node-exporter
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - mern-networks
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=9100"

volumes:
  mongo-data:
  prometheus-data:
  grafana-data:

networks:
  mern-networks:
    driver: bridge
